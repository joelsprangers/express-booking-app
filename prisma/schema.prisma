// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String

  bookings Booking[]
  reviews  Review[]
}

model Host {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String
  aboutMe        String

  listings Property[]
}

model Property {
  id            String @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Float  @default(0.00)
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int
  hostId        String

  bookings  Booking[]
  reviews   Review[]
  amenities Amenity[]

  host Host @relation(fields: [hostId], references: [id], onDelete: Cascade)
}

model Booking {
  id             String   @id @default(uuid())
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String

  userId     String
  propertyId String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Review {
  id      String @id @default(uuid())
  rating  Int
  comment String

  userId     String
  propertyId String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Amenity {
  id         String     @id @default(uuid())
  name       String
  properties Property[]
}
